数量减1call
mov eax,0xffffffff
mov ecx,0055d16c
mov edx,0xc
mov ebx,1
push ebx
CALL 00418E20
--------------------------------------
背包数量:66*3=198=0xC6
每个格空间跨度:0x188+4=0x18C
第一格起始地址: 55D2F8-55D480	[55D2F8+18C=55D484]
第二格地址空间: 55D484-55D60C	[55D484+18C=55D610]
第三格地址空间: 55D610-55D798	[55D610+18C=55D79C]
后面依次类推...
----------
人物装备物品:
内存空间跨度:0x318=792
手拿起止地址: 570E88 - 5711A0
验证下一个起止地址: 5711A0 - 5714B8
验证上一个起止地址: 570B70 - 570E88
第一个地址空间:		570858 - 570B70 -
					570878 物品名称
					5708D8 物品描述
					570958 物品属性描述
					570998 Head - 头戴   -标志
					5709A8 物品类型
					5709AC 物品价格
					5709B0 物品数量
					5709B4 物品ID
					5709BC 恢复生命值
					5709C0 恢复体力值
					5709C4 恢复气血值
					5709C8 增加生命上限
					5709CC 增加体力上限
					5709D0 增加气血上限
					5709D4 攻击
					5709D8 防御
					5709DC 敏捷
					5709E0 2体解毒,3气解毒
============================================
--------------------------------------
----找使用物品call方法----------------
1.启动CE,从物品数量下手找使用物品call
2.		说明			地址		类型	数值	
	背包第5格物品数量 	0055DA80 	4 		2
3.启动OD，dd 0055DA80 ；在数据窗口下内存访问断点
4.游戏中，使用一个物品，这里是背包的第五格的物品，游戏断下
在堆栈窗口中粘贴如下内容：
0012FDFC   0055D138  Sworda.0055D138
0012FE00   00425D10  返回到 Sworda.00425D10 来自 Sworda.00418E20
0012FE04   00000005
0012FE08   00456440  ASCII "h5C"
0012FE0C   00000005
0012FE10   77822EB2  USER32.PeekMessageA
0012FE14   00402E0A  返回到 Sworda.00402E0A 来自 Sworda.00425C60
0012FE18   00000005
0012FE1C   0012FE60
0012FE20   00000002
0012FE24   00402C09  返回到 Sworda.00402C09 来自 Sworda.00402DB0
0012FE28   00000035
0012FE2C   00456440  ASCII "h5C"

找“返回到”这样的内容，可以找到00418E20、00425C60、00402DB0
逐个跟踪可以发现00425C60就是我们要找的call，call内容如下：
00402DF7  |> 8B8F A8070000  MOV ECX,DWORD PTR DS:[EDI+7A8]
00402DFD  |. 03CE           ADD ECX,ESI                              ;  我们在背包的第五格物品下的内存断点，这里传于参数５　
00402DFF  |. 51             PUSH ECX                                 ;  背包的第５格
00402E00  |. B9 38D15500    MOV ECX,Sworda.0055D138
00402E05  |. E8 562E0200    CALL Sworda.00425C60                     ;  使用物品call
5.启动call测试工具，测试如下：
----
背包5格物品使用CALL
mov ecx,5
push ecx	
mov ecx,0055D138
call 00425C60
----
背包物品使用CALL
mov ecx,背包数组下标，下标从1开始
push ecx	;传入参数
mov ecx,0055D138
call 00425C60
----
快捷C键使用call
mov ecx,0055d138
mov eax,0xDF	223
push eax
call 0x00425c60
----
快捷X键使用call
mov ecx,0055d138
mov eax,0xDE	222
push eax
call 0x00425c60
----
快捷Z键使用call
mov ecx,0055d138
mov eax,0xDD	221
push eax
call 0x00425c60
--------------------
----找武功技能使用call方法----------------
1.分析：
	首先要找到下断点的突破口。
	我们发现每次发放技能时候，都要消耗气值，我们可以在气值处下断。
	按快捷键a，后发放“清心咒”技能，消耗了6点内力值。
2.用CE找到当前内力值基址：4E28A8
3.用OD对内力下内存访问断点。我们发现断点一直下断，不行。
4.换另一种方法，下内存写入断点看看。OK这个可以游戏不会断下，我们按下A快捷键发放技能，
可以正常断下，记录下堆栈窗口的值，如下：
0012FE38   00000000
0012FE3C   00000000
0012FE40   0055D138  Sworda.0055D138
0012FE44   00425C16  返回到 Sworda.00425C16 来自 Sworda.00426F40
0012FE48   00000006
0012FE4C   004E2A6C  Sworda.004E2A6C
0012FE50   004E2884  Sworda.004E2884
0012FE54   0041E46C  返回到 Sworda.0041E46C 来自 Sworda.00425BE0
0012FE58   7781D656  USER32.PostMessageA
0012FE5C   004E2884  Sworda.004E2884
0012FE60   0041DB3A  返回到 Sworda.0041DB3A 来自 Sworda.0041E420
0012FE64   004E2884  Sworda.004E2884
0012FE68   00422452  返回到 Sworda.00422452 来自 Sworda.0041DA70
0012FE6C   004D9E30  Sworda.004D9E30
0012FE70   004182A8  返回到 Sworda.004182A8 来自 Sworda.00422440
0012FE74   0012FEB4  ASCII "p9C"
0012FE78   0041B0BA  返回到 Sworda.0041B0BA 来自 Sworda.00418280
0012FE7C   004088A5  返回到 Sworda.004088A5 来自 Sworda.0041B070
0012FE80   1000E70A  返回到 Sword.1000E70A

这些值比较多。没关系一个一个试就可以了。删除内存写入断点
5.先试第一个00426F40
mov ecx,0055D138
mov eax,0x6
push eax
CALL 00426F40
发现然并卵，内力消耗了，但是没有使用的效果展示。

再试 00425BE0
ctrl+g,在cpu窗口中转到这个地址，发现是在子程序的入口处，如下：
00425BE0  /$ 56             PUSH ESI				;这里是快捷A键的武功技能CALL入口
00425BE1  |. 8BF1           MOV ESI,ECX
00425BE3  |. 57             PUSH EDI
00425BE4  |. 8B46 1C        MOV EAX,DWORD PTR DS:[ESI+1C]
00425BE7  |. 8D0CC5 0000000>LEA ECX,DWORD PTR DS:[EAX*8]
00425BEE  |. 2BC8           SUB ECX,EAX
00425BF0  |. 8D0488         LEA EAX,DWORD PTR DS:[EAX+ECX*4]
00425BF3  |. 8D1440         LEA EDX,DWORD PTR DS:[EAX+EAX*2]
00425BF6  |. 8A8496 348C010>MOV AL,BYTE PTR DS:[ESI+EDX*4+18C34]
00425BFD  |. 84C0           TEST AL,AL
00425BFF  |. 8DBC96 348C010>LEA EDI,DWORD PTR DS:[ESI+EDX*4+18C34]
00425C06  |. 74 29          JE SHORT Sworda.00425C31
00425C08  |. 8B87 54010000  MOV EAX,DWORD PTR DS:[EDI+154]
00425C0E  |. 8BCE           MOV ECX,ESI					;ecx=0055D138
00425C10  |. 50             PUSH EAX					;eax=对应技能每次释放消耗的内力值
00425C11  |. E8 2A130000    CALL Sworda.00426F40		;这里是快捷A键的武功技能CALL，没有展示效果
00425C16  |. 85C0           TEST EAX,EAX
00425C18  |. 74 17          JE SHORT Sworda.00425C31
00425C1A  |. 8B0E           MOV ECX,DWORD PTR DS:[ESI]
00425C1C  |. 8B97 48010000  MOV EDX,DWORD PTR DS:[EDI+148]
00425C22  |. 6A 00          PUSH 0
00425C24  |. 51             PUSH ECX	;ecx=1
00425C25  |. 52             PUSH EDX	;edx=7
00425C26  |. 57             PUSH EDI	;edi=005793CC
00425C27  |. B9 989D4D00    MOV ECX,Sworda.004D9D98
00425C2C  |. E8 AFD4FEFF    CALL Sworda.004130E0		;仔细分析发现这个是技能展示效果call
00425C31  |> 5F             POP EDI
00425C32  |. 5E             POP ESI
00425C33  \. C3             RETN
所以我们就在子程序入口地址处下断，断下后记录堆栈窗口,如下：
0012FE54   0041E46C  返回到 Sworda.0041E46C 来自 Sworda.00425BE0
0012FE58   7781D656  USER32.PostMessageA
0012FE5C   004E2884  Sworda.004E2884
0012FE60   0041DB3A  返回到 Sworda.0041DB3A 来自 Sworda.0041E420
0012FE64   004E2884  Sworda.004E2884
0012FE68   00422452  返回到 Sworda.00422452 来自 Sworda.0041DA70
0012FE6C   004D9E30  Sworda.004D9E30
0012FE70   004182A8  返回到 Sworda.004182A8 来自 Sworda.00422440
0012FE74   0012FEB4  ASCII "p9C"
0012FE78   0041B0BA  返回到 Sworda.0041B0BA 来自 Sworda.00418280
0012FE7C   004088A5  返回到 Sworda.004088A5 来自 Sworda.0041B070
0012FE80   1000E70A  返回到 Sword.1000E70A

这里就选第一个返回到就可以了，在反汇编窗口中跟随到地址：
0041E462  |. B9 38D15500    MOV ECX,Sworda.0055D138
0041E467  |. E8 74770000    CALL Sworda.00425BE0
0041E46C  |. 6A 00          PUSH 0

然后测试这个call，如下：
mov ecx,0055D138
CALL 00425BE0
这个就OK了虽然展示效果没有快捷A键华丽。但是这个也确实消耗掉了内力。
我们在试一下后面有没有还可以的。
6.0041E420，我们发现这个就不行了，会一直断下。
7.我们在测试S键，发现还是这个call,没有任何的区分，可能说明找的还不是对。
8.继续向下找0041DA70，不行
	00422440 00418280 0041B070
9.继续分析,这个call找的是对的,可以调用成功,但是这个call并不完善;
	区分不出是按了a键还是s键的技能call;同时还可以看出按A键:清心咒技能,
	并不需要什么参数,直接作用自己;但是按S键,还必须有个人物方向参数,才能有目标的释放技能.
	这个游戏,人物走动共有8个方向.
---------------------------------------
--捡物品call--分析
0012FDB0   7782286F  USER32.GetMessageA
0012FDB4   00426636  返回到 Sworda.00426636 来自 Sworda.00418D80

00426620  /$ 8B4424 04      MOV EAX,DWORD PTR SS:[ESP+4]	eax=0012FE48
00426624  |. 81EC 80000000  SUB ESP,80						esp=0012FDC0
0042662A  |. 56             PUSH ESI						esi=0057A320
0042662B  |. 8BF1           MOV ESI,ECX						esi=0055D138
0042662D  |. 50             PUSH EAX						eax=0012FE48
0042662E  |. 8D4E 34        LEA ECX,DWORD PTR DS:[ESI+34]	ecx=0055D16C
00426631  |. E8 4A27FFFF    CALL Sworda.00418D80

0012FDB8   0012FE48
0012FDBC   0057A320  Sworda.0057A320
0012FDC0   FFFFFFFE
0012FDC4   7793316F  返回到 ntdll.7793316F 来自 ntdll.77926BFD
0012FDC8   77932D68  返回到 ntdll.77932D68 来自 ntdll.77932D72
0012FDCC   00000000
0012FDD0   05E1EE68
0012FDD4   05E1EE68
0012FDD8   00000000
0012FDDC   7792491C  返回到 ntdll.ZwClose+0C
0012FDE0   75CB6AC4  返回到 KERNELBA.75CB6AC4 来自 ntdll.ZwClose
0012FDE4   00000264
0012FDE8   00000264
0012FDEC  /0012FDFC
0012FDF0  |75ED05DF  返回到 kernel32.75ED05DF 来自 <JMP.&API-MS-Win-Core-Handle-L1-1-0.CloseHandle>
0012FDF4  |00000264
0012FDF8  |00000003
0012FDFC  \00000018
0012FE00   0042CB89  返回到 Sworda.0042CB89 来自 Sworda.0042EEFD
0012FE04   00000003
0012FE08   D802EFD8
0012FE0C  /0012FE38
0012FE10  |75EBE328  返回到 kernel32.75EBE328 来自 <JMP.&KERNELBASE.CompareStringA>
0012FE14  |00000400
0012FE18  |40000000
0012FE1C  |0057A7A8  ASCII "AddGoods"
0012FE20  |FFFFFFFF
0012FE24  |0043A2E4  ASCII "AddGoods"
0012FE28  |00428248  返回到 Sworda.00428248 来自 Sworda.00428060
0012FE2C  |7781D656  USER32.PostMessageA
0012FE30  |0057A320  Sworda.0057A320
0012FE34  |7782286F  USER32.GetMessageA
0012FE38  \77822EB2  USER32.PeekMessageA
0012FE3C   00416A44  返回到 Sworda.00416A44 来自 Sworda.004281C0
0012FE40   00416A53  返回到 Sworda.00416A53 来自 Sworda.00426620
0012FE44   0012FE48
0012FE48   646F6F47
0012FE4C   306D2D73
0012FE50   F0BD2D30
0012FE54   692EA8BB
0012FE58   0000696E
0012FE5C   00427F6B  返回到 Sworda.00427F6B 来自 Sworda.00427FC0
0012FE60   7781D656  USER32.PostMessageA
0012FE64   0057A320  Sworda.0057A320
0012FE68   00427E13  返回到 Sworda.00427E13
0012FE6C   004D9E30  Sworda.004D9E30
0012FE70   004182BC  返回到 Sworda.004182BC 来自 Sworda.00427DE0
0012FE74   0012FEB4  ASCII "p9C"
0012FE78   0041B0BA  返回到 Sworda.0041B0BA 来自 Sworda.00418280
0012FE7C   004088A5  返回到 Sworda.004088A5 来自 Sworda.0041B070
0012FE80   1000E70A  返回到 Sword.1000E70A
0012FE84   00000000
0012FE88   00000000
0012FE8C   0012FF88
0012FE90   7FFD6000
0012FE94   004F2164  Sworda.004F2164
0012FE98   00000202
0012FE9C   00000000
0012FEA0   009500B7
0012FEA4   00D11B31
0012FEA8   000000C5
0012FEAC   00000115
0012FEB0   004085E2  返回到 Sworda.004085E2 来自 Sword.?Run@KApplication@@UAEXXZ
0012FEB4   00433970  Sworda.00433970
0012FEB8   726F7753
0012FEBC   6C432064
0012FEC0   00737361
0012FEC4   00000000
0012FEC8   004380CC  Sworda.004380CC
0012FECC   0012FF88
0012FED0   7FFD6000
0012FED4   00429616  返回到 Sworda.00429616 来自 Sworda.0042A584
0012FED8   726F7753
0012FEDC   69572064
0012FEE0   776F646E
0012FEE4   00000000
0012FEE8   7FFD6000
0012FEEC   004290BA  返回到 Sworda.004290BA 来自 Sworda.00429649
0012FEF0   00000001
0012FEF4   00000065
0012FEF8   00000001
0012FEFC   00000000
0012FF00   0042A513  返回到 Sworda.<模块入口点>+0CE 来自 Sworda.004085B0
0012FF04   00400000  Sworda.00400000

------------------------------------
找Tab键呼出小地图Call
对地图名称下断[dd 45781C],然后切换地图后,按Tab键断下,复制堆栈窗口数据如下：
----------------------------
0012FCF0   F579AAD3
0012FCF4   0012FD7F
0012FCF8   004D9E88  Sworda.004D9E88
0012FCFC   00456C88  Sworda.00456C88
0012FD00   0012FD4C
0012FD04   0045781C  Sworda.0045781C
0012FD08   0012FCF0
0012FD0C   00438290  ASCII "Init"
0012FD10   0012FE24  指向下一个 SEH 记录的指针
0012FD14   75B4D5F5  SE处理程序
0012FD18   80DFDA2B
0012FD1C   00000000
0012FD20   10002C80  Sword.?g_SetFilePath@@YAXPAD@Z
0012FD24   0040EC14  返回到 Sworda.0040EC14 来自 kernel32.lstrcpynA 	;跟踪这个看一下
									;发现可以将地图上面的名称给隐藏掉
0012FD28   0045781C  Sworda.0045781C
0012FD2C   0012FD4C
0012FD30   00000100
0012FD34   004039F1  返回到 Sworda.004039F1 来自 Sworda.0040EC00	;再跟踪这个看一下
									;没有任何的相应,仅仅是返回了地图的名称：0x45781C
0012FD38   0012FD4C
0012FD3C   004D9E88  Sworda.004D9E88
0012FD40   004D9E88  Sworda.004D9E88
0012FD44   75C8286F  USER32.GetMessageA
0012FD48   75C82EB2  USER32.PeekMessageA
0012FD4C   F7CAB0D2
0012FD50   0000D6C1
0012FD54   FFFFFFFF
0012FD58   0000002E
0012FD5C   0000027F
0012FD60   0000020E
0012FD64   00000000
0012FD68   00000000
0012FD6C   5F70616D
0012FD70   5F383030
0012FD74   F7CAB0D2
0012FD78   6D00D6C1
0012FD7C   00007061
0012FD80   004102AE  返回到 Sworda.004102AE	;在跟踪者下面几个，都是无法正确下断！！
0012FD84   0043CA90  Sworda.0043CA90
0012FD88   0043CA90  Sworda.0043CA90
0012FD8C   0043CEFC  Sworda.0043CEFC
0012FD90   004102AE  返回到 Sworda.004102AE
0012FD94   0043CA90  Sworda.0043CA90
0012FD98   0043CA90  Sworda.0043CA90
0012FD9C   0043C978  Sworda.0043C978
0012FDA0   00410235  返回到 Sworda.00410235
0012FDA4   0012FE60
0012FDA8   0012FE60
0012FDAC   0043C910  Sworda.0043C910
0012FDB0   0041024F  返回到 Sworda.0041024F
0012FDB4   0012FE60
0012FDB8   0012FE60
0012FDBC   0043C8A8  Sworda.0043C8A8
0012FDC0   0041024F  返回到 Sworda.0041024F
0012FDC4   0012FE60
0012FDC8   0012FE60
0012FDCC   00000000
0012FDD0   00000000
0012FDD4   00000000
0012FDD8   00000000
0012FDDC   00000000
0012FDE0   00000000
0012FDE4   05882DB1
0012FDE8   00000765
0012FDEC   05882648  ASCII "[Init]"
0012FDF0   00000000
0012FDF4   00000000
0012FDF8   00000000
0012FDFC   00000000
0012FE00   00000000
0012FE04   00000000
0012FE08   00000000
0012FE0C   00000000
0012FE10   00000000
0012FE14   00001313
0012FE18   00010000
0012FE1C   00000001
0012FE20   00010000
0012FE24   0012FF78  指向下一个 SEH 记录的指针
0012FE28   00431199  SE处理程序
0012FE2C   00000000
0012FE30   0041A0FD  返回到 Sworda.0041A0FD 来自 Sworda.00403910	;好到了这里，正常下断点
	;此处的代码格式如下：
=============================
。。。
0041A0F3  |> \B9 886C4500     mov ecx,Sworda.00456C88	;  Case F of switch 0041A075
0041A0F8  |.  E8 1398FEFF     call Sworda.00403910		;跟踪这个call，后发现返回eax=1，代码执行成功。
														;但是，程序并没有打开tab小地图。
0041A0FD  |.  85C0            test eax,eax				;这里需要向下分析代码，F8单步向下执行，
0041A0FF  |.  74 18           je short Sworda.0041A119	;发现这里的下面的每一个call,都能执行到。
														;这里便是一个联合执行call。
0041A101  |.  8BCE            mov ecx,esi               ;  ecx=004D9E88
0041A103  |.  E8 E8000000     call Sworda.0041A1F0
0041A108  |.  B9 886C4500     mov ecx,Sworda.00456C88
0041A10D  |.  E8 2E9AFEFF     call Sworda.00403B40
0041A112  |.  8BCE            mov ecx,esi
0041A114  |.  E8 57050000     call Sworda.0041A670     ;  ecx=004D9E88
0041A119  |>  5E              pop esi                  ;  Default case of switch 0041A075
--------------------------------------------------------
代码测试工具这样写：
mov ecx,00456C88	
call 00403910		;	第一次执行成功返回eax=1
mov ecx,004D9E88
call 0041A1F0		;	第二次执行成功返回eax=0
mov ecx,00456C88
call 00403B40		;	第三次执行成功返回eax=1D8
mov ecx,004D9E88
call 0041A670		;	第四次执行成功返回eax=1
分了四次连续调用，然后可以看到Tab小地图出来了。
这就是我们要找的Tab键打开游戏小地图的call！！！
-----------------------------------------------
ok,下面再介绍法二：
就是第一次找到的是一个联合call ，不太方便，不妨在这个子程序的首部下断，
找找看是哪里调用了这里。
程序在首部断下，此时堆栈中，内容如下：
0012FE38   00419FA2  返回到 Sworda.00419FA2 来自 Sworda.0041A070
0012FE3C   0000000F
0012FE40   00419F87  返回到 Sworda.00419F87 来自 Sworda.00419F90
选择第一条，然后在反汇编窗口中跟随这个地址：00419FA2，内容如下：
00419F90  /$ 8B4424 04      MOV EAX,DWORD PTR SS:[ESP+4]
00419F94  |. 8338 0C        CMP DWORD PTR DS:[EAX],0C
00419F97  |. 75 09          JNZ SHORT Sworda.00419FA2
00419F99  |. 8B40 04        MOV EAX,DWORD PTR DS:[EAX+4]
00419F9C  |. 50             PUSH EAX				;	eax=F
00419F9D  |. E8 CE000000    CALL Sworda.0041A070	;	Tab键呼出小地图Call
00419FA2  \> C2 0400        RETN 4
这是一段小代码，使用远程call测试工具，测试如下：
push 0xF
call 0041A070
ok，完美呼出Tab键的小地图。
现在在进入这个call中看看0041A070，发现全部是switch-case语句，可以判断出
这个函数应该封装了一下快捷键的操作方法，其中就有Tab键的使用，需要传递参数0xF。
下面贴出这个call的代码,并给出分析：
--------------------------------------------------------------------------
00419F90  /$ 8B4424 04      MOV EAX,DWORD PTR SS:[ESP+4]
00419F94  |. 8338 0C        CMP DWORD PTR DS:[EAX],0C
00419F97  |. 75 09          JNZ SHORT Sworda.00419FA2
00419F99  |. 8B40 04        MOV EAX,DWORD PTR DS:[EAX+4]
00419F9C  |. 50             PUSH EAX				;	eax=??参数
00419F9D  |. E8 CE000000    CALL Sworda.0041A070	;	根据参数对应的操作
00419FA2  \> C2 0400        RETN 4
--------------------------快捷操作子程序-------------------------0041A070
0041A070  /$ 8B4424 04      MOV EAX,DWORD PTR SS:[ESP+4]
0041A074  |. 56             PUSH ESI
0041A075  |. 48             DEC EAX            		;  Switch (cases 1..41)
0041A076  |. 8BF1           MOV ESI,ECX
0041A078  |. 83F8 40        CMP EAX,40
0041A07B  |. 0F87 98000000  JA Sworda.0041A119
0041A081  |. 33C9           XOR ECX,ECX
0041A083  |. 8A88 48A14100  MOV CL,BYTE PTR DS:[EAX+41A148]
0041A089  |. FF248D 20A1410>JMP DWORD PTR DS:[ECX*4+41A120]
0041A090  |> 8BCE           MOV ECX,ESI             ;  Case 3B of switch 0041A075
0041A092  |. E8 09030000    CALL Sworda.0041A3A0	;	打开状态菜单;再调用一次会关闭
0041A097  |. 5E             POP ESI
0041A098  |. C2 0400        RETN 4
0041A09B  |> 8BCE           MOV ECX,ESI             ;  Case 3C of switch 0041A075
0041A09D  |. E8 4E030000    CALL Sworda.0041A3F0	;	打开装备菜单;再调用一次会关闭
0041A0A2  |. 5E             POP ESI
0041A0A3  |. C2 0400        RETN 4
0041A0A6  |> 8BCE           MOV ECX,ESI             ;  Case 3D of switch 0041A075
0041A0A8  |. E8 A3030000    CALL Sworda.0041A450	;	打开修炼菜单;再调用一次会关闭
0041A0AD  |. 5E             POP ESI
0041A0AE  |. C2 0400        RETN 4
0041A0B1  |> 8BCE           MOV ECX,ESI             ;  Case 3F of switch 0041A075
0041A0B3  |. E8 E8030000    CALL Sworda.0041A4A0	;	打开物品背包;再调用一次会关闭
0041A0B8  |. 5E             POP ESI
0041A0B9  |. C2 0400        RETN 4
0041A0BC  |> 8BCE           MOV ECX,ESI             ;  Case 40 of switch 0041A075
0041A0BE  |. E8 3D040000    CALL Sworda.0041A500	;	打开武功列表菜单;再调用一次会关闭
0041A0C3  |. 5E             POP ESI
0041A0C4  |. C2 0400        RETN 4
0041A0C7  |> 8BCE           MOV ECX,ESI             ;  Case 41 of switch 0041A075
0041A0C9  |. E8 92040000    CALL Sworda.0041A560	;	打开消息/任务菜单;再调用一次会关闭
0041A0CE  |. 5E             POP ESI
0041A0CF  |. C2 0400        RETN 4
0041A0D2  |> 8BCE           MOV ECX,ESI             ;  Case 39 of switch 0041A075
0041A0D4  |. E8 17010000    CALL Sworda.0041A1F0	;	将打开的菜单关闭,对tab键打开小地图无效
0041A0D9  |. 5E             POP ESI
0041A0DA  |. C2 0400        RETN 4
0041A0DD  |> 8BCE           MOV ECX,ESI             ;  Case 1 of switch 0041A075
0041A0DF  |. E8 0C010000    CALL Sworda.0041A1F0	;	这里是调用打开设置菜单
0041A0E4  |. 85C0           TEST EAX,EAX
0041A0E6  |. 75 31          JNZ SHORT Sworda.0041A119
0041A0E8  |. 8BCE           MOV ECX,ESI
0041A0EA  |. E8 C1040000    CALL Sworda.0041A5B0
0041A0EF  |. 5E             POP ESI
0041A0F0  |. C2 0400        RETN 4
0041A0F3  |> B9 886C4500    MOV ECX,Sworda.00456C88 ;  Case F of switch 0041A075
0041A0F8  |. E8 1398FEFF    CALL Sworda.00403910	;	这里是联合call
0041A0FD  |. 85C0           TEST EAX,EAX			;	1 Tab键打开小地图call
0041A0FF  |. 74 18          JE SHORT Sworda.0041A119
0041A101  |. 8BCE           MOV ECX,ESI				;	ecx=004D9E88
0041A103  |. E8 E8000000    CALL Sworda.0041A1F0	;	2 Tab键打开小地图call
0041A108  |. B9 886C4500    MOV ECX,Sworda.00456C88
0041A10D  |. E8 2E9AFEFF    CALL Sworda.00403B40	;	3 Tab键打开小地图call
0041A112  |. 8BCE           MOV ECX,ESI				;	ecx=004D9E88
0041A114  |. E8 57050000    CALL Sworda.0041A670	;	4 Tab键打开小地图call
0041A119  |> 5E             POP ESI                 ;  Default case of switch 0041A075
0041A11A  \. C2 0400        RETN 4
--------------------------
================================================================================

0012FE34   0012FE60
0012FE38   00419FA2  返回到 Sworda.00419FA2 来自 Sworda.0041A070
0012FE3C   0000000F
0012FE40   00419F87  返回到 Sworda.00419F87 来自 Sworda.00419F90
0012FE44   0012FE60
0012FE48   1000F270  Sword.?Get@KMessage@@QAEHPAUTMessage@@@Z
0012FE4C   004D9E30  Sworda.004D9E30
0012FE50   00418309  返回到 Sworda.00418309 来自 Sworda.00419EA0
0012FE54   0012FE60
0012FE58   75C7D656  USER32.PostMessageA
0012FE5C   004D9E30  Sworda.004D9E30
0012FE60   0000000C
0012FE64   0000000F
0012FE68   00000000
0012FE6C   00000000
0012FE70   00418294  返回到 Sworda.00418294 来自 Sworda.004182D0
0012FE74   0012FEB4  ASCII "p9C"
0012FE78   0041B0BA  返回到 Sworda.0041B0BA 来自 Sworda.00418280
0012FE7C   004088A5  返回到 Sworda.004088A5 来自 Sworda.0041B070
0012FE80   1000E70A  返回到 Sword.1000E70A
0012FE84   00000000
0012FE88   00000000
0012FE8C   0012FF88
0012FE90   7FFDF000
0012FE94   003409F6
0012FE98   00000200
0012FE9C   00000000
0012FEA0   005E0214
0012FEA4   018B1221  ASCII "<script src="errorPageStrings.js" language="javascript" type="text/javascript">
        </script>
        <script src="httpErrorPagesScripts.js" language="javascript" type="text/javascript">
        </script>
    </head>

    <body"...
0012FEA8   00000213
0012FEAC   0000008C
0012FEB0   004085E2  返回到 Sworda.004085E2 来自 Sword.?Run@KApplication@@UAEXXZ
0012FEB4   00433970  Sworda.00433970
0012FEB8   726F7753
0012FEBC   6C432064
0012FEC0   00737361
0012FEC4   00000000
0012FEC8   004380CC  Sworda.004380CC
0012FECC   0012FF88
0012FED0   7FFDF000
0012FED4   00429616  返回到 Sworda.00429616 来自 Sworda.0042A584
0012FED8   726F7753
0012FEDC   69572064
0012FEE0   776F646E  返回到 ole32.776F646E 来自 ole32.776F8597
0012FEE4   00000000
0012FEE8   7FFDF000
0012FEEC   004290BA  返回到 Sworda.004290BA 来自 Sworda.00429649
0012FEF0   00000001
0012FEF4   00000065
0012FEF8   00000001
0012FEFC   00000000
0012FF00   0042A513  返回到 Sworda.<模块入口点>+0CE 来自 Sworda.004085B0
0012FF04   00400000  Sworda.00400000
===================================================






	
	

